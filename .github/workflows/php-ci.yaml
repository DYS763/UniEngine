# This workflow validates the PHP code
name: PHP Verify

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint:
    name: Lint code (OS "${{ matrix.operating-system }}" / PHP "${{ matrix.php-versions }}")
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ['7.2']
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
            php-version: ${{ matrix.php-versions }}
            tools: phpcs, phpunit, cs2pr
            coverage: none
        env:
          fail-fast: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress
      - name: Run phpcs
        continue-on-error: true
        run: composer run-script ci:php:phpcs:verify
      - name: Show PHPCS results in PR
        run: composer run-script ci:php:phpcs:report2pr

  test:
    name: Test code (OS "${{ matrix.operating-system }}" / PHP "${{ matrix.php-versions }}")
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ['7.2']
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpcs, phpunit, cs2pr
          coverage: none
        env:
          fail-fast: true

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress

      - name: Create dummy includes/constants.php
        uses: "finnp/create-file-action@1.0.0"
        env:
          FILE_NAME: "includes/constants.php"
          FILE_DATA: |
            <?php

            if(!defined('INSIDE'))
            {
                die('Access Denied');
            }

            define('TIME_ONLINE', 900);
            define('TIME_HOUR', 3600);
            define('TIME_DAY', 86400);
            define('TIME_YEAR', 31536000);

            define('UNIENGINE_HASAPC', function_exists('apc_fetch'));

      - name: Run phpunit
        run: composer run-script ci:php:test
